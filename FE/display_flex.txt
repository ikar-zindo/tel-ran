Добро пожаловать в Flexbox Froggy. Игра, в которой тебе нужно помочь лягушонку Фроги и его друзьям, напиконтейнер CSS код! Направь этого лягушонка на лилию справа, используя свойство justify-content, которое выравнивает элементы горизонтально и принимает следующие значения:

justify-content:
flex-start: элементы выравниваются по левой стороне контейнера.
flex-end: элементы выравниваются по правой стороне контейнера.
center: элементы выравниваются по центру контейнера.
space-between: элементы отображаются с одинаковыми отступами между ними.
space-around: элементы отображаются с одинаковыми отступами вокруг них.
Например, justify-content: flex-end; сдвинет лягушонка вправо.

Теперь используй align-items, чтобы помочь лягушатам добраться до нижней части пруда. Это свойство CSS выравнивает элементы вертикально и принимает следующие значения:

align-items:   (align-self:)
flex-start: элементы выравниваются по верхнему краю контейнера.
flex-end: элементы выравниваются по нижнему краю контейнера.
center: элементы выравниваются вертикально по центру контейнера.
baseline: элементы отображаются на базовой линии контейнера.
stretch: элементы растягиваются, чтобы заполнить контейнер.

Лягушатам нужно выстроиться в том же порядке, что и лилии, используя flex-direction. Это свойство CSS задает направление, в котором будут расположены элементы в контейнере, и принимает следующие значения:

flex-direction:
row: элементы размещаются по направлению текста.
row-reverse: элементы отображаются в обратном порядке к направлению текста.
column: элементы располагаются сверху вниз.
column-reverse: элементы располагаются снизу вверх.

order:
Иногда изменения порядка отображения элементов в контейнере недостаточно. В таких случаях мы можем применить свойство order для конкретных элементов. По умолчанию, значение этого свойства у элементов равно 0, но мы можем задать положительное или отрицательное целое число этому свойству.

Используй свойство order, чтобы разместить лягушат на своих лилиях.

align-self:
Ещё одно свойство, которое ты можешь применить к определенному элементу — это align-self. Это свойство принимает те же значения, что и align-items.

flex-wrap:
О нет! Лягушат сплющило на одном ряду лилий. Раздвинь их с помощью свойства flex-wrap, которое принимает следующие значения:

nowrap: размеры элементов устанавливаются автоматически, чтобы они поместились в один ряд.
wrap: элементы автоматически переносятся на новую строку.
wrap-reverse: элементы автоматически переносятся на новую строку, но строки расположены в обратном порядке.

flex-flow:
Два свойства flex-direction и flex-wrap используются так часто вместе, что было создано свойство flex-flow для их комбинирования. Это свойство принимает их значения, разделённые пробелом.

Например, ты можешь использовать flex-flow: row wrap, чтобы элементы располагались в ряд и автоматически переносились на новую строку.

Попробуй использовать flex-flow, чтобы повторить предыдущий уровень.

align-content:
Лягушат раскидало по всему пруду, но лилии сгруппированы в верхней части. Ты можешь использовать align-content, чтобы указать, как несколько рядов должны отделяться друг от друга. Данное свойство принимает следующие значения:

flex-start: ряды группируются в верхней части контейнера.
flex-end: ряды группируются в нижней части контейнера.
center: ряды группируются вертикально по центру контейнера.
space-between: ряды отображаются с одинаковыми расстояниями между ними.
space-around: ряды отображаются с одинаковыми расстояниями вокруг них.
stretch: ряды растягиваются, чтобы заполнить контейнер равномерно.
Это может запутать, но align-content отвечает за расстояние между рядами, в то время как align-items отвечает за то, как элементы в целом будут выровнены в контейнере. Когда только один ряд, align-content ни на что не влияет.